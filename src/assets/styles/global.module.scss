/*
  ============== COLOR VARIABLES ================
*/


/*
  ============== SCREEN WIDTHS ================
*/

$screen-sm-min: 768px;
$screen-xs-max: ($screen-sm-min - 1);
$screen-md-min: 992px;
$screen-sm-max: ($screen-md-min - 1);
$screen-lg-min: 1200px;
$screen-md-max: ($screen-lg-min - 1);

/*
  ============== MIXINS ================
*/
@mixin push--auto {
  margin: { 
      left: auto;
      right: auto;
  }
}
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
      &:before {
          @include pseudo($pos: relative);
          width: 100%;
          padding-top: $padding;
      }
  } @else {
      padding-top: $padding;
  }
}

.fillOverride {
  fill: #c0b69b,
}
.strokeOverride {
  stroke: #c0b69b,
}
// @mixin font-stack($family, $weight, $size: inherit, $line-height: inherit, $style: normal, $stack: '"Lucida Grande", "Lucida Sans", Verdana, Helvetica, Arial, sans-serif') {
// 	@if $weight >= 6 { -webkit-font-smoothing: antialiased; } // Sharpen up the bold text
// 	font: {
// 		@if $style == normal {
// 			family: "#{$family} #{$weight}r", "#{$family} A", "#{$family} B", unquote($stack);
// 		}
// 		@else if $style == italic {
// 			family: "#{$family} #{$weight}i", "#{$family} A", "#{$family} B", unquote($stack);
// 		}
// 		size: $size;
// 		style: $style;
// 		@if type-of($weight) == number { weight: $weight * 100; } // This just allows you to enter a weight of something like "7" instead of "700"
// 		@else { weight: $weight; }
// 	}
// 	line-height: $line-height;
// }
// @mixin truncate($truncation-boundary) {
//   max-width: $truncation-boundary;
//   white-space: nowrap;
//   overflow: hidden;
//   text-overflow: ellipsis;
// }